apiVersion: v1
kind: Service
metadata:
  name: {{ include "kubemin-cli.fullname" . }}-redis
  labels:
    {{- include "kubemin-cli.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - name: redis
      port: {{ .Values.redis.servicePort }}
      targetPort: redis
  selector:
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kubemin-cli.fullname" . }}-redis
  labels:
    {{- include "kubemin-cli.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "kubemin-cli.fullname" . }}-redis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "kubemin-cli.labels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: {{ .Values.redis.servicePort }}
          readinessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /data
          command: ["redis-server", "--appendonly", "yes"]
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.redis.storage }}
